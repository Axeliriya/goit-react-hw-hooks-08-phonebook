{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Title/Title.jsx","components/Filter/Filter.jsx","views/PhonebookPage.jsx","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Title/Title.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getAllContacts","useState","name","setName","number","setNumber","reset","replaceNum","length","replace","className","styles","form","onSubmit","event","preventDefault","contact","some","toLowerCase","alert","addContact","lable","input","type","value","placeholder","pattern","title","onChange","currentTarget","required","country","preferredCountries","containerStyle","width","inputStyle","handleInputChangeNumber","add_btn","ContactItem","getVisibleContacts","map","id","item","href","button","onClick","deleteContact","onDeleteContact","fill","xmlns","viewBox","height","d","ContactList","list","Title","text","children","wrapper","connect","state","filter","getFilter","e","changeFilter","target","PhonebookPage","useEffect","fetchContacts","module","exports"],"mappings":"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","file":"static/js/phonebook-page.05f35182.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact, getAllContacts } from '../../redux/contacts';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getAllContacts);\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const handleInputChangeName = event => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const [number, setNumber] = useState('');\r\n\r\n  function handleInputChangeNumber(event) {\r\n    setNumber(event);\r\n  }\r\n\r\n  const onSubmit = contact => dispatch(addContact(contact));\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name,\r\n      number: replaceNum,\r\n    };\r\n\r\n    contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())\r\n      ? alert(`${name} is already in contacts`)\r\n      : onSubmit(contact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const replaceNum =\r\n    number.length === 11\r\n      ? number.replace(\r\n          /^(\\d{1})(\\d{3})(\\d{3})(\\d{2})(\\d{2})/,\r\n          '+$1 ($2) $3-$4-$5',\r\n        )\r\n      : number.replace(\r\n          /^(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})/,\r\n          '+$1 ($2) $3-$4-$5',\r\n        );\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.lable}>\r\n        <span>Name</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={name}\r\n          placeholder=\"Name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleInputChangeName}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.lable}>\r\n        <span>Phone</span>\r\n        <PhoneInput\r\n          country=\"ru\"\r\n          preferredCountries={['ru', 'ua']}\r\n          value={number}\r\n          containerStyle={{ width: 240 }}\r\n          inputStyle={{ width: 240 }}\r\n          onChange={event => handleInputChangeNumber(event)}\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.add_btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n// });\r\n\r\nexport default ContactForm;\r\n","import styles from './ContactItem.module.css';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, getVisibleContacts } from '../../redux/contacts';\n\nexport default function ContactItem() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {contacts.map(({ name, number, id }) => (\n        <li className={styles.item} key={id}>\n          <span>{name}:</span>\n          <span>\n            <a href={`tel: ${number.replace(/[^+\\d]/g, '')}`}>{number}</a>\n          </span>\n          <button className={styles.button} onClick={() => onDeleteContact(id)}>\n            <svg\n              fill=\"#000000\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 22 22\"\n              width=\"22px\"\n              height=\"22px\"\n            >\n              <path d=\"M3.389 7.113l1.101 10.908c0.061 0.461 2.287 1.977 5.51 1.979 3.225-0.002 5.451-1.518 5.511-1.979l1.102-10.908c-1.684 0.942-4.201 1.387-6.613 1.387-2.41 0-4.928-0.445-6.611-1.387zM13.168 1.51l-0.859-0.951c-0.332-0.473-0.692-0.559-1.393-0.559h-1.831c-0.7 0-1.061 0.086-1.392 0.559l-0.859 0.951c-2.57 0.449-4.434 1.64-4.434 2.519v0.17c0 1.547 3.403 2.801 7.6 2.801 4.198 0 7.601-1.254 7.601-2.801v-0.17c0-0.879-1.863-2.070-4.433-2.519zM12.070 4.34l-1.070-1.34h-2l-1.068 1.34h-1.7c0 0 1.862-2.221 2.111-2.522 0.19-0.23 0.384-0.318 0.636-0.318h2.043c0.253 0 0.447 0.088 0.637 0.318 0.248 0.301 2.111 2.522 2.111 2.522h-1.7z\"></path>\n            </svg>\n          </button>\n        </li>\n      ))}\n    </>\n  );\n}\n\n// ContactItem.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//     id: PropTypes.string.isRequired,\n//   }),\n// };\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList() {\n  return (\n    <ul className={styles.list}>\n      <ContactItem />\n    </ul>\n  );\n}\n","import styles from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text, children }) => {\n  return (\n    <div className={styles.wrapper}>\n      <h2 className={styles.title}>{text}</h2>\n      {children}\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter, getFilter } from '../../redux/contacts';\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <label className={styles.lable}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={onChange}\n        required\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n// import shortid from 'shortid';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Title from '../components/Title';\nimport Filter from '../components/Filter';\nimport { fetchContacts } from '../redux/contacts';\nimport { useDispatch } from 'react-redux';\n\nexport default function PhonebookPage() {\n  const dispatch = useDispatch();\n  const getFetchContacts = () => dispatch(fetchContacts());\n\n  useEffect(() => {\n    getFetchContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"HomePage\">\n      <Title text=\"Phonebook\">\n        <ContactForm />\n      </Title>\n\n      <Title text=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Title>\n    </div>\n  );\n}\n\n// PhonebookPage.propTypes = {\n//   title: PropTypes.string,\n//   poster_path: PropTypes.string,\n//   overview: PropTypes.string,\n//   genres: PropTypes.arrayOf(PropTypes.object),\n//   loading: PropTypes.bool,\n//   vote_average: PropTypes.number,\n// };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3J8Iy\",\"lable\":\"ContactForm_lable__2DUA5\",\"input\":\"ContactForm_input__2AUWe\",\"add_btn\":\"ContactForm_add_btn__1fBmK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__1f2tL\",\"item\":\"ContactItem_item__nxOzp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1VAEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__60typ\",\"wrapper\":\"Title_wrapper__1EXRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"Filter_lable__1bOPV\",\"input\":\"Filter_input__1BIU4\"};"],"sourceRoot":""}